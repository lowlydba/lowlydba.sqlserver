---
- name: Var block
  vars:
    identity: "TestIdentity"
    name: "MrSmith"
    password: "Password123!"
    mapped_class_type: "None"
    provider_name: ""
  module_defaults:
    lowlydba.sqlserver.credential:
      sql_instance: "{{ sqlserver_instance }}"
      sql_username: "{{ sqlserver_username }}"
      sql_password: "{{ sqlserver_password }}"
      identity: "{{ identity }}"
  tags: ["credential"]
  block:
    - name: Create a new credential
      lowlydba.sqlserver.credential:
        name: "{{ name }}"
        password: "{{ password }}"
      register: result
    - assert:
        that:
          - result.data != None
          - result.data.ComputerName != None
          - result.data.InstanceName != None
          - result.data.SqlInstance != None
          - result.data.Identity == identity
          - result.data.Name == name
          - result is changed

    - name: Try to add the same credential
      lowlydba.sqlserver.credential:
        name: "{{ name }}"
        password: "{{ password }}"
      register: result
    - assert:
        that:
          - result.data != None
          - result.data.ComputerName != None
          - result.data.InstanceName != None
          - result.data.SqlInstance != None
          - result.data.Identity == identity
          - result.data.Name == name
          - result is not changed

    - name: Replace an existing credential
      lowlydba.sqlserver.credential:
        force: true
      register: result
    - assert:
        that:
          - result.data != None
          - result.data.ComputerName != None
          - result.data.InstanceName != None
          - result.data.SqlInstance != None
          - result.data.Identity == identity
          - result.data.Name == identity
          - result is changed

    - name: Drop credential
      lowlydba.sqlserver.credential:
        state: "absent"
      register: result
    - assert:
        that:
          - result.data != None
          - result is changed

    - name: Create credential in check mode
      lowlydba.sqlserver.credential:
        sql_instance: "{{ sqlserver_instance }}"
        sql_username: "{{ sqlserver_username }}"
        sql_password: "{{ sqlserver_password }}"
        identity: "{{ identity }}"
      register: result
      check_mode: true
    - assert:
        that:
          - result is changed

  always:
    - name: Drop credential
      lowlydba.sqlserver.credential:
        state: "absent"
