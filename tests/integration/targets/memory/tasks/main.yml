---
- name: Var block
  vars:
    max_memory_over_9000: 99999
  module_defaults:
    lowlydba.sqlserver.memory:
      sql_instance: "{{ sqlserver_instance }}"
      sql_username: "{{ sqlserver_username }}"
      sql_password: "{{ sqlserver_password }}"
  tags: ["memory"]
  block:
    - name: Set max memory
      lowlydba.sqlserver.memory:
        max: "{{ max_memory_over_9000 }}"
      register: result
    - assert:
        that:
          - result.data.Total != None
          - result.data.PreviousMaxValue is defined
          - result.data.PreviousMaxValue != None
          - result.data.MaxValue == max_memory_over_9000

    - name: Don't change max memory
      lowlydba.sqlserver.memory:
        max: "{{ max_memory_over_9000 }}"
      register: result
    - assert:
        that:
          - result is not changed

    - name: Dynamically set max memory
      lowlydba.sqlserver.memory:
        max: 0
      register: result
    - assert:
        that:
          - result.data.PreviousMaxValue == max_memory_over_9000
          - result.data.MaxValue != "{{ max_memory_over_9000 }}"
          - result.data.Total  > result.data.MaxValue

    - name: No change with dynamic memory
      lowlydba.sqlserver.memory:
        max: 0
      register: result
    - assert:
        that:
          - result is not changed

    - name: Set max memory in checkmode
      lowlydba.sqlserver.memory:
        max: "{{ max_memory_over_9000 }}"
      check_mode: true
      register: result
    - assert:
        that:
          - result is changed

    - name: Verify unchanged checkmode max memory
      lowlydba.sqlserver.memory:
        max: "{{ max_memory_over_9000 }}"
      register: result
    - assert:
        that:
          - result.data.PreviousMaxValue != "{{ max_memory_over_9000 }}"
          - result.data.MaxValue == max_memory_over_9000
          - result is changed

  always:
    - name: Dynamically set max memory
      lowlydba.sqlserver.memory:
        max: 0
